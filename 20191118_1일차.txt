이광호 강사님
leekh4232@gmail.com


 - 설치프로그램
	. Node.js
		. React의 실행환경
		. npm을 통해 각종 패키지들 다운받기 위함
	. yarn
		. npm보다 진보된 차세대 패키지 관리자
		  (js진영 전용)
	. 에디터
		. VSCode
		
	. choco (일괄 설치프로그램)
		. 설치 후 명령프롬프트를 관리자권한(Ctrl+Shift+엔터)으로 실행
		. choco install -y 프로그램이름  	//ex) choco install -y nodejs
		. choco uninstall -y 프로그램이름
		. choco update -y 프로그램이름
		. choco list -local-only		//현재 PC에 설치된 항목들 표시
		. 설치가능한 프로그램이름은 https://chocolatey.org/packages에서 검색

----------------------------------------------------------------------------------------

JavaScript : 호환성문제로 브라우저마다 새로 만들어야했음.
     ---------------> jQuery : 한번의 코딩으로 브라우저 호환성 보장
	 그런데 요즘은 브라우저가 좋아져서 호환이 잘됨. jQuery를 쓰면 속도가 너무 느려짐. jQuery를 써야할 필요가 있는가?
	 
	 V8 : 자바스크립트 실행기 -> Node		//즉, 자바스크립트가 독자적으로 실행이 가능함
	 
	 부트스트랩 신버젼부터 jQuery를 지원하지않는다고 발표함.
	 
	 ECMAScript -> 자바스크립트 표준
	 ES5(옛날꺼) -> ES6(ECMAScript 2015) -> ES7... ES8
	 
	 - React는 ES6를 기본 문법으로 사용. 즉 옛날 문법은 지원하지 않음.
	 - WebPack : 번들링 (통합)
	    . 하위브라우저 호환을 위해서 웹 팩에 포함 되어있는 바벨이라는 도구를 통해 ES6 -> ES5 문법으로 변환됨)
	 

--------------------------------------------------------------------------------------------

 - 파워쉘에서 프로젝트 생성방법 3가지(※주의사항!! 프로젝트명에 대문자 금지)
	yarn create react-app 프로젝트이름
	npm create react-app 프로젝트이름
	npm init react-app 프로젝트이름
	
	
 - 실행(파워쉘 창에서 해당 프로젝트 경로로 이동 후)
	yarn start 혹은 npm start
	
	. http://localhost:3000/ 주소는 public 폴더와 맵핑됨. (public 폴더가 root 폴더라고 생각하면 될 듯)
	
 - (팁)cmd 관리자권한으로 실행
	npm install -g live-server
	설치 후 cmd창에서 live-server 입력 (파워쉘에선 안됌)
	. 실시간으로 코딩결과 확인가능

--------------------------------------------------------------------------------------------

 - 리액트의 3가지 개념
	 . 재사용 가능한 단위(컴포넌트)를 작성한다
	   . 이를 태그처럼 활용함
	   ex)
			App.js
				document.write("<h1>helloworld</h1>");
			
			index.html
				<div><App><div><App><App><App>
		. 위와같은 방법으로 사용하지않고 리액트만의 JS확장 문법 > HTML 이랑 비슷 > JSX
	 . 백엔드에서 전달하는 데이터가 변경될 때 실시간으로 화면에 반영
	 . 이 과정에서 HTML의 일부에만 변경사항을 반영하는 것이 아닌
	   화면 전체를 새롭게 랜더링(화면그리기)함
	   이 때 새로고침 없이 자동으로 수행됨.